name: Code Refactor

on:
  workflow_dispatch:  # Triggered manually through the GitHub UI
    inputs:
      target_branch:
        description: 'Target Branch'     
        required: true
      open_ai_model:
        type: choice
        description: Which OpenAI model to use
        options: 
        - gpt-4
        - gpt-4-32k
        - gpt-3.5-turbo
        - gpt-3.5-turbo-16k
        default: gpt-3.5-turbo
      model_temperature:
        type: number
        description: 'Model Temperature'
        required: true
        default: 0.0
      max_supported_tokens:
        type: number
        description: 'Maximum total tokens you want the model to use (prompt and completion)'
        required: true
        default: 4096
      max_completion_tokens:
        type: number
        description: 'Maximum number of completion tokens you want the model to use. Must be smaller than max_supported_tokens.'
        required: true
        default: 2048
      log_level:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug

jobs:
  code_review:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get branch list
        id: branch_list
        run: |
          branches=$(git branch -r --format='%(refname:short)' | grep -v HEAD)
          branch_array=($branches)
          echo "::set-output name=branches::${branch_array[@]}"
        shell: bash
        
      - name: Input variables
        id: input_vars
        run: |
          echo "type=${{ github.event.inputs.type }}"
          echo "source_branch=${{ github.event.inputs.source_branch }}"
          echo "target_branch=${{ github.event.inputs.target_branch }}"
        shell: bash
        
      - name: Start code review step
        id: code_review
        uses: aronweiler/codereviewer@main
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CR_PROVIDER: "github"
        with:
          type: ${{ steps.input_vars.outputs.type }}
          source_branch: ${{ steps.input_vars.outputs.source_branch }}
          target_branch: ${{ steps.input_vars.outputs.target_branch }}
