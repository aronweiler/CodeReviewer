---

variables:
  CR_MODEL: 
    value: "gpt-3.5-turbo-0613"
    description: "The model to use"
  CR_TEMPERATURE: 
    value: "0.0"
    description: "The temperature"
  CR_MAX_SUPPORTED_TOKENS: 
    value: "4096"
    description: 'The maximum supported tokens'
  CR_MAX_COMPLETION_TOKENS: 
    value: "2048"
    description: 'The maximum supported completion tokens'
  CR_TARGET_BRANCH:
    value: "new-branch"
    description: "The branch where any changes will be committed"
  CR_TYPE: 
    value: "review"
    description: "The type of action to perform"    
  CR_TARGET_FILES: 
    value: ""
    description: "Optional: List of comma separated values containing target files.  If empty, the entire repo will be used."


workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      when: never
    - when: always

# Uncomment to run
stages:
  - run_docker

run_docker:
  stage: run_docker
  image: 
    name: case.artifacts.medtronic.com/ventilation-docker-dev-local/prototypes/code-reviewer:latest 
    entrypoint: [""]
  script:
    - python3 -u /src/app.py
  # script:
  #   - echo "Running CodeReviewer"
  #   - > 
  #     docker run 
  #     --rm 
  #     -e GITLAB_PROJECT_ID=$CI_PROJECT_ID 
  #     -e GITLAB_URL=https://code.medtronic.com
  #     -e CR_PROVIDER=gitlab
  #     -e CR_MODEL=$CR_MODEL
  #     -e CR_TEMPERATURE=$CR_TEMPERATURE
  #     -e CR_MAX_SUPPORTED_TOKENS=$CR_MAX_SUPPORTED_TOKENS
  #     -e CR_MAX_COMPLETION_TOKENS=$CR_MAX_COMPLETION_TOKENS
  #     -e CR_LOG_LEVEL=debug
  #     -e CR_SOURCE_BRANCH=$CI_COMMIT_REF_NAME
  #     -e CR_TARGET_BRANCH=$CR_TARGET_BRANCH
  #     -e CR_TYPE=$CR_TYPE
  #     -e CR_TARGET_FILES=$CR_TARGET_FILES
  #     case.artifacts.medtronic.com/ventilation-docker-dev-local/prototypes/code-reviewer:latest 


  


# run_python:
#   stage: run_python
#   script:
#     - echo "Running CodeReviewer Python script..."
#     - python app.py
